# syntax=docker/dockerfile:1

##########
# Project's base image, for build only.
FROM golang:1.21-alpine AS build

ARG BUILD_DATE=now
ARG VSC_REF=unknown

RUN apk add --no-cache git \
    --repository=https://dl-cdn.alpinelinux.org/alpine/latest-stable/main

WORKDIR /app

COPY . /app

RUN go mod tidy \
	&& CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o /api \
    -ldflags="-X github.com/devdrops/transaction-vault/infra/appinfo.AppVersion=$VSC_REF -X github.com/devdrops/transaction-vault/infra/appinfo.AppBuildAt=$BUILD_DATE" \
    ./cmd

##########
# Project's deploy image.
FROM scratch

ARG BUILD_DATE=now
ARG COMMIT_HASH=unknown
ARG VERSION=unknown

LABEL org.label-schema.build-date="$BUILD_DATE" \
    org.label-schema.vcs-ref="$VSC_REF"

WORKDIR /

COPY --from=build /api /api

EXPOSE 8080

ENTRYPOINT ["/api"]